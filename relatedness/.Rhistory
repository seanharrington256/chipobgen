ped_sexbirth
View(ped_sexbirth)
# merge them
ped_sexbirth <- merge(ped_info, sex_birth, by.x = "id", by.y = "ID", all = TRUE)
dim(ped_sexbirth)
# merge with coverage
ped_sexbirth_loci <- merge(ped_sexbirth, coverage, all = TRUE)
View(ped_sexbirth_loci)
dim(ped_sexbirth)
dim(ped_sexbirth_loci)
dim(coverage)
head(ped_sexbirth)
# merge with coverage
ped_sexbirth_loci <- merge(ped_sexbirth, coverage, by.x = "id", by.y = "ID" all = TRUE)
# merge with coverage
ped_sexbirth_loci <- merge(ped_sexbirth, coverage, by.x = "id", by.y = "ID", all = TRUE)
dim(ped_sexbirth_loci)
View(ped_sexbirth_loci)
head(ped_sexbirth)
ped_sexbirth$id
head(loci)
head(coverage)
coverage$ID
loci <- "Sample_cov.csv"
euth_log <- "Euthanasia_Log.csv"
# read in the files
ped_info <- read.csv(path_seq_out, row.names = 1)
sex_birth <- read.csv(path_sex_birth_file, row.names = 1)
coverage <- read.csv(loci)
euth <- read.csv(euth_log)
weights <- dplyr::select(euth, c(Chipmunk.ID, Weight..g., Enclosure))
colnames(weights) <- c("ID", "weight_g", "encolsure")
weights$weight_g <- as.numeric(gsub("N/A", NA, weights$weight_g))
coverage$ID
#setting up file paths
path_sex_birth_file <- "Sequoia_Sex_Birth_Data_1504_fixed.csv"
path_seq_out <- "pedigree.csv"
loci <- "Sample_cov.csv"
euth_log <- "Euthanasia_Log.csv"
# read in the files
ped_info <- read.csv(path_seq_out, row.names = 1)
sex_birth <- read.csv(path_sex_birth_file, row.names = 1)
coverage <- read.csv(loci)
euth <- read.csv(euth_log)
weights <- dplyr::select(euth, c(Chipmunk.ID, Weight..g., Enclosure))
colnames(weights) <- c("ID", "weight_g", "encolsure")
weights$weight_g <- as.numeric(gsub("N/A", NA, weights$weight_g))
coverage$ID
# merge with coverage
ped_sexbirth_loci <- merge(ped_sexbirth, coverage, by.x = "id", by.y = "ID", all = TRUE)
dim(ped_sexbirth_loci)
dim(ped_sexbirth)
View(ped_sexbirth_loci)
# merge with weights
all_data <- merge(ped_sexbirth_loci, weights, all.x = TRUE)
head(all_data)
dim(all_data)
# merge with weights
all_data <- merge(ped_sexbirth_loci, weights, by.x = "id", by.y = "ID", all.x = TRUE)
dim(all_data)
View(all_data)
# individuals in sex_birth not in ped_info and the reverse
ped_sexbirth$id[ped_sexbirth$id %in% sex_birth$ID]
# individuals in sex_birth not in ped_info and the reverse
ped_sexbirth$id[!ped_sexbirth$id %in% sex_birth$ID]
sex_birth$ID[!sex_birth$ID %in% ped_sexbirth$id]
dim(sex_birth)
dim(ped_info)
# individuals in sex_birth not in ped_info and the reverse
ped_sexbirth$id[!ped_sexbirth$id %in% sex_birth$ID]
sex_birth$ID[!sex_birth$ID %in% ped_sexbirth$id]
ped_sexbirth$id[!ped_sexbirth$id %in% coverage$ID]
coverage$ID[!coverage$ID  %in% ped_sexbirth$id]
ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
dim(weights$ID)
length(weights$ID)
weights$ID
head(weights)
# read in the files
ped_info <- read.csv(path_seq_out, row.names = 1)
sex_birth <- read.csv(path_sex_birth_file, row.names = 1)
coverage <- read.csv(loci)
euth <- read.csv(euth_log)
weights <- dplyr::select(euth, c(Chipmunk.ID, Weight..g., Enclosure))
colnames(weights) <- c("ID", "weight_g", "encolsure")
weights$weight_g <- as.numeric(gsub("N/A", NA, weights$weight_g))
weights$ID
# merge them
ped_sexbirth <- merge(ped_info, sex_birth, by.x = "id", by.y = "ID", all = TRUE)
# individuals in sex_birth not in ped_info and the reverse
ped_sexbirth$id[!ped_sexbirth$id %in% sex_birth$ID]
sex_birth$ID[!sex_birth$ID %in% ped_sexbirth$id]
# merge with coverage
ped_sexbirth_loci <- merge(ped_sexbirth, coverage, by.x = "id", by.y = "ID", all = TRUE)
#find any non-overlapping IDs
ped_sexbirth$id[!ped_sexbirth$id %in% coverage$ID]
coverage$ID[!coverage$ID  %in% ped_sexbirth$id]
# merge with weights
all_data <- merge(ped_sexbirth_loci, weights, by.x = "id", by.y = "ID", all.x = TRUE)
ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
# make some replacements
weights$ID <- gsub("untagged female", "untagged_female", weights$ID)
ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
in_ped_not_weight <- ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
in_weight_not_ped <- weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
in_ped_not_weight
in_weight_not_ped
substr(in_weight_not_ped, nchar(in_weight_not_ped) - 3, nchar(in_weight_not_ped))
lat4_weights <- substr(in_weight_not_ped, nchar(in_weight_not_ped) - 3, nchar(in_weight_not_ped))
last4_weights <- substr(in_weight_not_ped, nchar(in_weight_not_ped) - 3, nchar(in_weight_not_ped))
last4_weights[last4_weights %in% ped_sexbirth_loci$id]
nchar(in_ped_not_weight)
nchar(in_ped_not_weight) > 6
in_ped_not_weight_long <- in_ped_not_weight[nchar(in_ped_not_weight) > 6]
in_ped_not_weight_long
# replace long ones with the last 4
in_ped_not_weight[nchar(in_ped_not_weight) > 6] <- substr(in_ped_not_weight[nchar(in_ped_not_weight) > 6], nchar(in_ped_not_weight[nchar(in_ped_not_weight) > 6]) - 3, nchar(in_ped_not_weight[nchar(in_ped_not_weight) > 6]))
in_ped_not_weight
# replace long ones with the last 4
in_ped_not_weight[nchar(in_ped_not_weight) > 6]
in_ped_not_weight <- ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
in_weight_not_ped <- weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
# replace long ones with the last 4
in_ped_not_weight[nchar(in_ped_not_weight) > 6]
# merge with weights
all_data <- merge(ped_sexbirth_loci, weights, by.x = "id", by.y = "ID", all.x = TRUE)
# make some replacements
weights$ID <- gsub("untagged female", "untagged_female", weights$ID)
in_ped_not_weight <- ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
in_weight_not_ped <- weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
in_weight_not_ped
all_data <- merge(ped_sexbirth_loci, weights, by.x = "id", by.y = "ID", all.x = TRUE)
in_ped_not_weight <- ped_sexbirth_loci$id[!ped_sexbirth_loci$id %in% weights$ID]
in_weight_not_ped <- weights$ID[!weights$ID %in% ped_sexbirth_loci$id]
in_ped_not_weight
in_weight_not_ped
write.csv(all_data, file = "chipmunk_loci_etc.csv")
all_data <- merge(ped_sexbirth_loci, weights, by.x = "id", by.y = "ID", all = TRUE)
write.csv(all_data, file = "chipmunk_loci_etc.csv")
write.csv(all_data, file = "chipmunk_loci_etc.csv")
write.csv(all_data, file = "chipmunk_INFO_seqRes.csv")
# load required packages
library(tidyverse)
# Read the relatedness data from the file
relatedness_data <- read.table("chip_c93_branch1.relatedness", header = TRUE)
# setwd("C:/Users/UW-User/Desktop/")
setwd("~/UWyo/kellyn_chipmunks/Analyses_git/relatedness/") # Sean's working dir
list.files()
# Read the relatedness data from the file
relatedness_data <- read.table("chip_c93_branch1.relatedness", header = TRUE)
# Create a matrix using pivot_wider
relatedness_matrix <- relatedness_data %>%
pivot_wider(names_from = INDV2, values_from = RELATEDNESS_AJK) %>%
column_to_rownames(var = "INDV1")
# Print the resulting matrix
print(relatedness_matrix)
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Extract Chipmunk ID and Weight columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk ID", "Weight (g)")]
colnames(euthanasia_data)
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Extract Chipmunk ID and Weight columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk ID", "Weight..g.")]
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
filtered_relatedness_matrix <- relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
filtered_euthanasia_data <- euthanasia_subset[euthanasia_subset$Chipmunk.ID %in% common_chipmunk_ids, ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
dim(filtered_relatedness_matrix)
dim(filtered_euthanasia_data)
head(filtered_euthanasia_data)
euthanasia_subset$Chipmunk.ID
unique(euthanasia_subset$Chipmunk.ID)
length(euthanasia_subset$Chipmunk.ID)
length(unique(euthanasia_subset$Chipmunk.ID))
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
filtered_relatedness_matrix <- relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
filtered_euthanasia_data <- euthanasia_subset[euthanasia_subset$Chipmunk.ID %in% common_chipmunk_ids, ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
dim(filtered_euthanasia_data)
# Calculate a matrix of differences in weights
weight_diff_matrix <- outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-")
filtered_euthanasia_data$Weight..g.
filtered_euthanasia_data$Weight..g.
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
euthanasia_data$Weight..g.
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
filtered_relatedness_matrix <- relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
filtered_euthanasia_data <- euthanasia_subset[euthanasia_subset$Chipmunk.ID %in% common_chipmunk_ids, ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate a matrix of differences in weights
weight_diff_matrix <- outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-")
# Run a Mantel test
mantel_test_result <- mantel(weight_diff_matrix, filtered_relatedness_matrix)
# Calculate a matrix of differences in weights
weight_diff_matrix <- outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-")
filtered_euthanasia_data$Weight..g.
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
euthanasia_data$Weight..g.
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
filtered_relatedness_matrix <- relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
filtered_euthanasia_data <- euthanasia_subset[euthanasia_subset$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_euthanasia_data
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
filtered_relatedness_matrix <- relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
filtered_euthanasia_data <- euthanasia_subset[euthanasia_subset$Chipmunk.ID %in% common_chipmunk_ids, ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate a matrix of differences in weights
weight_diff_matrix <- outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-")
weight_diff_matrix
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Reorder filtered_euthanasia_data
filtered_euthanasia_data <- filtered_euthanasia_data[match(common_chipmunk_ids, filtered_euthanasia_data$Chipmunk.ID), ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate a matrix of differences in weights
weight_diff_matrix <- outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-")
# Run a Mantel test
mantel_test_result <- mantel(weight_diff_matrix, filtered_relatedness_matrix)
weight_diff_matrix
# Run a Mantel test
mantel_test_result <- mantel(weight_diff_matrix, filtered_relatedness_matrix)
# Run a Mantel test
mantel_test_result <- mantel(weight_diff_matrix, filtered_relatedness_matrix)
library(vegan)
# Run a Mantel test
mantel_test_result <- mantel(weight_diff_matrix, filtered_relatedness_matrix)
# Run a Mantel test
mantel_test_result <- vegan::mantel(
outer(filtered_euthanasia_data$Weight..g., filtered_euthanasia_data$Weight..g., "-", na.rm = TRUE),
filtered_relatedness_matrix,
na.rm = TRUE
)
# Calculate the Euclidean distance matrix from weight differences
weight_diff_matrix <- as.matrix(dist(filtered_euthanasia_data$Weight..g., diag = TRUE, upper = TRUE))
# Run a Mantel test
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
filtered_relatedness_matrix,
na.rm = TRUE
)
?na.omit
head(euthanasia_data)
na.omit(euthanasia_data[, "Weight..g."])
is.na(euthanasia_data$Weight..g.)
!is.na(euthanasia_data$Weight..g.)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
euthanasia_data
dim(euthanasia_data)
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
is.na(euthanasia_data$Weight..g.)
sum(is.na(euthanasia_data$Weight..g.))
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Reorder filtered_euthanasia_data
filtered_euthanasia_data <- filtered_euthanasia_data[match(common_chipmunk_ids, filtered_euthanasia_data$Chipmunk.ID), ]
# Print the filtered datasets
print(filtered_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate the Euclidean distance matrix from weight differences
weight_diff_matrix <- as.matrix(dist(filtered_euthanasia_data$Weight..g., diag = TRUE, upper = TRUE))
# Run a Mantel test
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
filtered_relatedness_matrix,
na.rm = TRUE
)
View(euthanasia_subset)
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
View(filtered_relatedness_matrix)
View(filtered_relatedness_matrix)
View(filtered_euthanasia_data)
View(weight_diff_matrix)
View(relatedness_data)
View(relatedness_matrix)
# Convert to a symmetric matrix
symmetric_relatedness_matrix <- Symmetrize(Matrix(filtered_relatedness_matrix, sparse = TRUE))
library(Matrix)
# Convert to a symmetric matrix
symmetric_relatedness_matrix <- Symmetrize(Matrix(filtered_relatedness_matrix, sparse = TRUE))
# Create a symmetric matrix
symmetric_relatedness_matrix <- matrix(0, nrow = nrow(filtered_relatedness_matrix), ncol = ncol(filtered_relatedness_matrix))
symmetric_relatedness_matrix[upper.tri(symmetric_relatedness_matrix)] <- filtered_relatedness_matrix[upper.tri(filtered_relatedness_matrix)]
symmetric_relatedness_matrix[lower.tri(symmetric_relatedness_matrix)] <- t(filtered_relatedness_matrix)[lower.tri(t(filtered_relatedness_matrix))]
symmetric_relatedness_matrix
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Create a symmetric matrix
symmetric_relatedness_matrix <- matrix(0, nrow = nrow(filtered_relatedness_matrix), ncol = ncol(filtered_relatedness_matrix))
symmetric_relatedness_matrix[upper.tri(symmetric_relatedness_matrix)] <- filtered_relatedness_matrix[upper.tri(filtered_relatedness_matrix)]
symmetric_relatedness_matrix[lower.tri(symmetric_relatedness_matrix)] <- t(filtered_relatedness_matrix)[lower.tri(t(filtered_relatedness_matrix))]
# Reorder filtered_euthanasia_data
filtered_euthanasia_data <- filtered_euthanasia_data[match(common_chipmunk_ids, filtered_euthanasia_data$Chipmunk.ID), ]
# Print the filtered datasets
print(symmetric_relatedness_matrix)
print(filtered_euthanasia_data)
# Print the filtered datasets
print(symmetric_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate the Euclidean distance matrix from weight differences
weight_diff_matrix <- as.matrix(dist(filtered_euthanasia_data$Weight..g., diag = TRUE, upper = TRUE))
filtered_euthanasia_data
# Calculate the Euclidean distance matrix from weight differences
weight_diff_matrix <- as.matrix(dist(filtered_euthanasia_data$Weight..g., diag = TRUE, upper = TRUE))
weight_diff_matrix
# Run a Mantel test
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
symmetric_relatedness_matrix,
na.rm = TRUE
)
# Print the result of the Mantel test
print(mantel_test_result)
1-symmetric_relatedness_matrix
symmetric_relatedness_matrix
1 - symmetric_relatedness_matrix
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
1 - symmetric_relatedness_matrix,
na.rm = TRUE
)
mantel_test_result
mantel_test_result
# Run a Mantel test
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
symmetric_relatedness_matrix,
na.rm = TRUE
)
# Try this out with 1-relatedness
mantel_test_result_Inverse_Relatedness <- vegan::mantel(
weight_diff_matrix,
1 - symmetric_relatedness_matrix,
na.rm = TRUE
)
source("~/UWyo/kellyn_chipmunks/Analyses_git/relatedness/relatedness.R", echo=TRUE)
# Print the result of the Mantel test
print(mantel_test_result)
(1 - symmetric_relatedness_matrix)[1:3, 1:3]
1 - symmetric_relatedness_matrix
symmetric_relatedness_matrix
# setwd("C:/Users/UW-User/Desktop/")
setwd("~/UWyo/kellyn_chipmunks/Analyses_git/relatedness/") # Sean's working dir
# Read the relatedness data from the file
relatedness_data <- read.table("chip_c93_branch1.relatedness", header = TRUE)
# Create a matrix using pivot_wider
relatedness_matrix <- relatedness_data %>%
pivot_wider(names_from = INDV2, values_from = RELATEDNESS_AJK) %>%
column_to_rownames(var = "INDV1")
# Print the resulting matrix
print(relatedness_matrix)
# Read the Euthanasia Log data from the file
euthanasia_data <- read.csv("Euthanasia_Log.csv")
# Remove duplicates based on "Chipmunk.ID"
euthanasia_data <- euthanasia_data %>% distinct(Chipmunk.ID, .keep_all = TRUE)
# make weight column numeric
euthanasia_data$Weight..g. <- as.numeric(euthanasia_data$Weight..g.)
# Remove NAs
euthanasia_data <- euthanasia_data[!is.na(euthanasia_data$Weight..g.),]
# Extract Chipmunk.ID and Weight..g. columns
euthanasia_subset <- euthanasia_data[, c("Chipmunk.ID", "Weight..g.")]
# Filter the relatedness matrix and euthanasia dataset based on common Chipmunk IDs
common_chipmunk_ids <- intersect(rownames(relatedness_matrix), euthanasia_subset$Chipmunk.ID)
# Subset the datasets to include only common individuals
filtered_euthanasia_data <- filtered_euthanasia_data[filtered_euthanasia_data$Chipmunk.ID %in% common_chipmunk_ids, ]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Create a symmetric matrix
symmetric_relatedness_matrix <- matrix(0, nrow = nrow(filtered_relatedness_matrix), ncol = ncol(filtered_relatedness_matrix))
symmetric_relatedness_matrix[upper.tri(symmetric_relatedness_matrix)] <- filtered_relatedness_matrix[upper.tri(filtered_relatedness_matrix)]
symmetric_relatedness_matrix[lower.tri(symmetric_relatedness_matrix)] <- t(filtered_relatedness_matrix)[lower.tri(t(filtered_relatedness_matrix))]
symmetric_relatedness_matrix[1:5, 1:5]
filtered_relatedness_matrix[1:5, 1:5]
filtered_relatedness_matrix <- filtered_relatedness_matrix[common_chipmunk_ids, common_chipmunk_ids]
# Create a symmetric matrix with original diagonal values
symmetric_relatedness_matrix <- matrix(0, nrow = nrow(filtered_relatedness_matrix), ncol = ncol(filtered_relatedness_matrix))
upper_tri <- upper.tri(symmetric_relatedness_matrix)
lower_tri <- lower.tri(symmetric_relatedness_matrix)
symmetric_relatedness_matrix[upper_tri] <- filtered_relatedness_matrix[upper_tri]
symmetric_relatedness_matrix[lower_tri] <- t(filtered_relatedness_matrix)[lower_tri]
# Set diagonal values to the original diagonal values
diag(symmetric_relatedness_matrix) <- diag(filtered_relatedness_matrix)
head(filtered_relatedness_matrix)
str(filtered_relatedness_matrix)
filtered_relatedness_matrix <- as.matrix(filtered_relatedness_matrix)
filtered_relatedness_matrix
# Create a symmetric matrix with original diagonal values
symmetric_relatedness_matrix <- matrix(0, nrow = nrow(filtered_relatedness_matrix), ncol = ncol(filtered_relatedness_matrix))
upper_tri <- upper.tri(symmetric_relatedness_matrix)
lower_tri <- lower.tri(symmetric_relatedness_matrix)
symmetric_relatedness_matrix[upper_tri] <- filtered_relatedness_matrix[upper_tri]
symmetric_relatedness_matrix[lower_tri] <- t(filtered_relatedness_matrix)[lower_tri]
# Set diagonal values to the original diagonal values
diag(symmetric_relatedness_matrix) <- diag(filtered_relatedness_matrix)
symmetric_relatedness_matrix[1:5, 1:5]
# Reorder filtered_euthanasia_data
filtered_euthanasia_data <- filtered_euthanasia_data[match(common_chipmunk_ids, filtered_euthanasia_data$Chipmunk.ID), ]
# Print the filtered datasets
print(symmetric_relatedness_matrix)
print(filtered_euthanasia_data)
# Calculate the Euclidean distance matrix from weight differences
weight_diff_matrix <- as.matrix(dist(filtered_euthanasia_data$Weight..g., diag = TRUE, upper = TRUE))
# Run a Mantel test
mantel_test_result <- vegan::mantel(
weight_diff_matrix,
symmetric_relatedness_matrix,
na.rm = TRUE
)
# Print the result of the Mantel test
print(mantel_test_result)
1 - symmetric_relatedness_matrix
# Try this out with 1-relatedness
rel_minus1 <- 1 - symmetric_relatedness_matrix
mantel_test_result_Inverse_Relatedness <- vegan::mantel(
weight_diff_matrix,
rel_minus1,
na.rm = TRUE
)
print(mantel_test_result_Inverse_Relatedness)
